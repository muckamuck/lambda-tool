---
AWSTemplateFormatVersion: '2010-09-09'
Description: ${stackDescription}
Parameters:
  s3Bucket:
    Description: bucket of the thingy
    Type: String
  s3Key:
    Description: key of the thingy
    Type: String
    Default: lambda/something.zip
  functionName:
    Description: name of the thingy
    Type: String
    Default: something
  logGroupName:
    Description: name of the log group
    Type: String
    Default: something
  handler:
    Description: entry point
    Type: String
    Default: main.lambda_handler
  retentionDays:
    Description: days to retain the Cloudwatch logs
    Type: String
    Default: '30'
  memorySize:
    Description: memory size
    Type: String
    Default: 128
  runTime:
    Description: run time engine of the thingy
    Type: String
    Default: python2.7
  timeOut:
    Description: time out in seconds
    Type: String
    Default: 60
${roleParameterSection}
${snsTopicARN}
${trustedService}
${reservedConcurrency}
${scheduleExpression}
% if includeVpcConfig:
${subnetsParameterSection}
${sgParameterSection}
% endif
Resources:
${lambdaLogGroup}
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: s3Bucket
        S3Key:
          Ref: s3Key
${environment_section}
      FunctionName:
        Ref: functionName
      Handler: 
        Ref: handler
      MemorySize:
        Ref: memorySize
      Role: 
        # Ref: role if given as a parameter
        # Fn::ImportValue: <something> if given as an import
        ${roleSpecification}
      Runtime: 
        Ref: runTime
      Timeout:
        Ref: timeOut
${reservedConcurrencyResource}
% if includeVpcConfig:
      VpcConfig:
        SecurityGroupIds:
          ${securityGroupIds}
        SubnetIds:
          ${subnetIds}
% endif
${snsSubscriptionResource}
${trustedServiceResource}
${scheduleResource}
${theAPI}
${outputSection}
